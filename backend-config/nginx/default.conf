server {
    listen 80;
    server_name api.wade-usa.com;
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name api.wade-usa.com;
    client_max_body_size 100M;

    # SSL Config
    ssl_certificate /etc/letsencrypt/live/api.wade-usa.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.wade-usa.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # This is the crucial part. We handle the preflight 'OPTIONS' request first.
        if ($request_method = 'OPTIONS') {
            # Add all necessary headers for the browser to accept the request.
            add_header 'Access-Control-Allow-Origin' $cors_header;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            # Tell the browser the preflight is valid for 24 hours.
            add_header 'Access-Control-Max-Age' 86400;
            # End the request here with a 204 No Content response.
            return 204;
        }

        # For all other requests (GET, POST, etc.), add the origin header
        # before passing the request to Directus.
        add_header 'Access-Control-Allow-Origin' $cors_header always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        proxy_pass http://directus:8055;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}