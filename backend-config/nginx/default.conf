# # ===============================================================
# # SERVER BLOCK FOR THE BACKEND API (api.wade-usa.com)
# # ===============================================================
# server {
#     listen 80;
#     server_name api.wade-usa.com;
#     location /.well-known/acme-challenge/ { root /var/www/certbot; }
#     location / { return 301 https://$host$request_uri; }
# }

# server {
#     listen 443 ssl http2;
#     server_name api.wade-usa.com;
#     ssl_certificate /etc/letsencrypt/live/api.wade-usa.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.wade-usa.com/privkey.pem;
#     # ... other ssl settings ...

#     location / {
#         # Proxy requests to the Directus container
#         proxy_pass http://directus:8055;
#         proxy_set_header Host $host;
#     }
# }

# # ===============================================================
# # SERVER BLOCK FOR THE FRONTEND REACT APP (wade-usa.com)
# # ===============================================================
# server {
#     listen 80;
#     server_name wade-usa.com www.wade-usa.com;
#     location /.well-known/acme-challenge/ { root /var/www/certbot; }
#     location / { return 301 https://$host$request_uri; }
# }

# server {
#     listen 443 ssl http2;
#     server_name wade-usa.com www.wade-usa.com;
#     ssl_certificate /etc/letsencrypt/live/wade-usa.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/wade-usa.com/privkey.pem;
#     # ... other ssl settings ...

#     location / {
#         # This is the key change:
#         # Proxy requests to our new "frontend" service.
#         # Docker's internal DNS will resolve "frontend" to the container's IP.
#         proxy_pass http://frontend:80;
#         proxy_set_header Host $host;
#     }
# }

# ===============================================================
# SERVER BLOCK FOR THE BACKEND API (api.wade-usa.com)
# ===============================================================
server {
    listen 80;
    server_name api.wade-usa.com;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}

server {
    listen 443 ssl http2;
    server_name api.wade-usa.com;

    # Set the max upload size
    client_max_body_size 256M;

    # --- SSL Certificate Settings ---
    ssl_certificate /etc/letsencrypt/live/api.wade-usa.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.wade-usa.com/privkey.pem;
    
    # --- Recommended SSL Settings from Certbot ---
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # Proxy requests to the Directus container
        proxy_pass http://directus:8055;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ===============================================================
# SERVER BLOCK FOR THE FRONTEND REACT APP (wade-usa.com)
# ===============================================================
server {
    listen 80;
    server_name wade-usa.com www.wade-usa.com;
    location /.well-known/acme-challenge/ { root /var/www/certbot; }
    location / { return 301 https://$host$request_uri; }
}

server {
    listen 443 ssl http2;
    server_name wade-usa.com www.wade-usa.com;

    # --- SSL Certificate Settings ---
    ssl_certificate /etc/letsencrypt/live/wade-usa.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wade-usa.com/privkey.pem;

    # --- Recommended SSL Settings from Certbot ---
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        # Proxy requests to our new "frontend" service.
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}